type WatchlistItem @model
  @key(fields: ["userId", "showId"]) {
  userId: ID!
  showId: ID!
  show: Show @connection(fields: ["showId"])
}

type User @model
  @key(fields: ["id"]) {
  id: ID!
  name: String!
  watchlist: [WatchlistItem] @connection(fields: ["id"])
}

type Review @model
  @key(fields: ["showId", "userId"])
  @key(name: "reviewsByUser", fields: ["userId", "updatedAt"], queryField: "reviewsByUser") {
  showId: ID!
  userId: ID!
  rating: Int!
  isFavorite: Boolean
  user: User @connection(fields: ["userId"])
  show: Show @connection(fields: ["showId"])
  updatedAt: AWSDateTime
}

enum ShowType {
  tv
  movie
}

type Show @model
  @algolia(fields: { include: ["title", "type", "releaseDate"] })
  @key(fields: ["id"])
  @key(name: "recentlyRated", fields: ["source", "createdAt"], queryField: "recentlyRated")
  @key(name: "showsByType", fields: ["type", "createdAt"], queryField: "showsByType") {
  id: ID!
  title: String!
  type: ShowType!
  rating: Float!
  img: String
  releaseDate: AWSDateTime
  description: String
  imdbRating: Float
  rtRating: Int
  reviews: [Review] @connection(fields: ["id"])
  createdAt: AWSDateTime
  source: String!
}